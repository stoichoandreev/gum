apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'//we can skip this plugin in Android Studio 2.2+ because of APK Analyzer, but it give us great ./gradlew scripts
apply plugin: 'me.tatarka.retrolambda'//we can remove this plugin but Jack and Jill is not stable yet
apply plugin: 'android-command'
apply plugin: 'com.novoda.monkey-runner'
apply from: '../config/android_application_quality.gradle'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    compileOptions.incremental = true
    dataBinding.enabled = true
    testBuildType "debug"//can specify some other build type
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def versionMajor = versionProps['VERSION_MAJOR'].toInteger()
        def versionMinor = versionProps['VERSION_MINOR'].toInteger()
        def versionPatch = versionProps['VERSION_PATCH'].toInteger()
        defaultConfig {
            applicationId "uk.gum.advert"
            minSdkVersion 16
            targetSdkVersion 25
            versionCode versionMajor * 1000000 + versionMinor * 1000 + versionPatch * 100
            versionName "${versionMajor}.${versionMinor}.${versionPatch}"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }
        buildTypes {
            debug {
                debuggable true
                applicationIdSuffix ".debug"
                versionNameSuffix "-debug"
            }
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }

        lintOptions {
            warning 'InvalidPackage'
            warning 'GradleCompatible'
            warning 'MissingTranslation'
            textReport true
            textOutput 'stdout'
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            java.excludes = ['src/androidTest/**']
        }
        androidTest.setRoot('src/androidTest')
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}
monkeyRunner {
    taskDependency 'installDebug'
    eventsCount 50000
    packageNameFilter 'uk.gum.advert.debug'
    logFileName 'monkey_events.log'
    //run ./gradlew runMonkeyAll  ->  to start Monkey on all connected devices
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //Modules
    compile project(':base')
    compile project(':api')
    compile project(':addetails')

    compile rootProject.ext.libraries.supportAppcompat_v7
    compile rootProject.ext.libraries.supportDesign
    compile rootProject.ext.libraries.cardview
    compile rootProject.ext.libraries.rxJava2
    compile rootProject.ext.libraries.rxAndroid
    compile rootProject.ext.libraries.rxAndroid
    compile rootProject.ext.libraries.rxBinding2
    compile rootProject.ext.libraries.rxBinding2Appcompat
    compile rootProject.ext.libraries.picasso
    compile rootProject.ext.libraries.timber
    compile rootProject.ext.libraries.dagger
    compile rootProject.ext.libraries.daggerAnnotation
    annotationProcessor rootProject.ext.libraries.daggerCompiler

    androidTestAnnotationProcessor rootProject.ext.libraries.daggerCompiler
    testCompile rootProject.ext.libraries.dagger

    commonTestDependencies(it)
    commonAndroidTestDependencies(it)

}
